name: zap-scan

on:
  schedule:
    - cron: "0 4 * * 0"  # weekly Sunday 4am UTC
  workflow_dispatch:

jobs:
  run-zap:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - name: Ensure jq
        run: sudo apt-get update && sudo apt-get install -y jq
      - name: Run Security-Abuse suite
        id: run
        env:
          TESTING_URL: ${{ secrets.TESTING_URL }}
          BACKEND_URL: ${{ secrets.BACKEND_URL }}
          TESTING_SERVICE_KEY: ${{ secrets.TESTING_SERVICE_KEY }}
        run: |
          set -euo pipefail
          API="$TESTING_URL/api/v1"
          SID=$(curl -s -H "X-Testing-Service-Key: $TESTING_SERVICE_KEY" "$API/suites" | jq -r '.[] | select(.name=="Security-Abuse") | .id')
          if [ -z "$SID" ]; then echo "Security-Abuse suite not found"; exit 2; fi
          RES=$(curl -s -H "X-Testing-Service-Key: $TESTING_SERVICE_KEY" -H 'Content-Type: application/json' -d "{\"suite_id\": $SID, \"target_api_url\": \"$BACKEND_URL\"}" "$API/runs")
          RID=$(echo "$RES" | jq -r '.run_id')
          INFO=$(curl -s -H "X-Testing-Service-Key: $TESTING_SERVICE_KEY" "$API/runs/$RID")
          echo "$INFO" > run.json
          REPORT=$(jq -r '.signed_report_url' run.json)
          HIGHS=$(jq -c '[.run.findings[] | select(.severity=="high")]' run.json)
          echo "report=$REPORT" >> $GITHUB_OUTPUT
          echo "highs=$HIGHS" >> $GITHUB_OUTPUT

      - name: Create issues for High findings
        if: ${{ steps.run.outputs.highs != '[]' }}
        uses: actions/github-script@v7
        env:
          TESTING_URL: ${{ secrets.TESTING_URL }}
          REPORT: ${{ steps.run.outputs.report }}
          HIGHS: ${{ steps.run.outputs.highs }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const highs = JSON.parse(process.env.HIGHS || '[]');
            const reportUrl = `${process.env.TESTING_URL}${process.env.REPORT}`;
            for (const f of highs) {
              const title = `ZAP High: ${f.area} - ${f.message}`.slice(0, 100);
              const body = `High-risk finding detected by weekly ZAP scan.\n\nArea: ${f.area}\nMessage: ${f.message}\n\nReport: ${reportUrl}`;
              await github.rest.issues.create({ owner: context.repo.owner, repo: context.repo.repo, title, body });
            }

