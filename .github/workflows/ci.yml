name: CI

on:
  pull_request:
    branches: [ main, master ]

jobs:
  backend:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: forge
          POSTGRES_PASSWORD: forge
          POSTGRES_DB: forge
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U forge" --health-interval=10s --health-timeout=5s --health-retries=5
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: backend/requirements.txt
      
      - name: Install dependencies
        working-directory: backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install types-PyYAML
          sudo apt-get update && sudo apt-get install -y postgresql-client
          export DATABASE_URL=postgresql://forge:forge@localhost:5432/forge
          psql "$DATABASE_URL" -c "CREATE EXTENSION IF NOT EXISTS vector;"
      
      - name: Run ruff
        working-directory: backend
        run: |
          pip install ruff
          ruff check .
      
      - name: Run black check
        working-directory: backend
        run: |
          pip install black
          black --check .
      
      - name: Run mypy
        working-directory: backend
        run: |
          pip install mypy
          mypy app
      
      - name: Run tests
        working-directory: backend
        run: |
          pip install pytest
          pytest

  frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
      
      - name: Install dependencies
        working-directory: frontend
        run: npm ci
      
      - name: Type check
        working-directory: frontend
        run: npx tsc --noEmit
      
      - name: Build
        working-directory: frontend
        run: npm run build
