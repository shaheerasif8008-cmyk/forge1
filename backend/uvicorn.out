INFO:     Will watch for changes in these directories: ['/Users/shaheer/Forge_1/backend']
INFO:     Uvicorn running on http://0.0.0.0:8000 (Press CTRL+C to quit)
INFO:     Started reloader process [23652] using WatchFiles
/Users/shaheer/Forge_1/backend/.venv/lib/python3.13/site-packages/pydantic/_internal/_fields.py:161: UserWarning: Field "model_name" has conflict with protected namespace "model_".

You may be able to resolve this warning by setting `model_config['protected_namespaces'] = ()`.
  warnings.warn(
/Users/shaheer/Forge_1/backend/.venv/lib/python3.13/site-packages/pydantic/_internal/_fields.py:161: UserWarning: Field "model_used" has conflict with protected namespace "model_".

You may be able to resolve this warning by setting `model_config['protected_namespaces'] = ()`.
  warnings.warn(
/Users/shaheer/Forge_1/backend/.venv/lib/python3.13/site-packages/pydantic/_internal/_fields.py:161: UserWarning: Field "model_used" has conflict with protected namespace "model_".

You may be able to resolve this warning by setting `model_config['protected_namespaces'] = ()`.
  warnings.warn(
{"timestamp": "2025-08-18T01:16:47.239236+00:00", "level": "INFO", "logger": "uvicorn.error", "message": "Started server process [23691]", "module": "server", "function": "_serve", "line": 82, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:16:47.239306+00:00", "level": "INFO", "logger": "uvicorn.error", "message": "Waiting for application startup.", "module": "on", "function": "startup", "line": 48, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:16:47.239686+00:00", "level": "INFO", "logger": "app.db.init_db", "message": "Database tables created successfully", "module": "init_db", "function": "init_db", "line": 18, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:16:47.258545+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "select pg_catalog.version()", "module": "base", "function": "_execute_context", "line": 1846, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:16:47.258589+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}", "module": "base", "function": "_execute_context", "line": 1846, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:16:47.267356+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "select current_schema()", "module": "base", "function": "_execute_context", "line": 1846, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:16:47.267380+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}", "module": "base", "function": "_execute_context", "line": 1846, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:16:47.269065+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "show standard_conforming_strings", "module": "base", "function": "_execute_context", "line": 1846, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:16:47.269084+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}", "module": "base", "function": "_execute_context", "line": 1846, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:16:47.276173+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)", "module": "base", "function": "_connection_begin_impl", "line": 2701, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:16:47.285357+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT tenants.id AS tenants_id, tenants.name AS tenants_name, tenants.beta AS tenants_beta, tenants.created_at AS tenants_created_at, tenants.updated_at AS tenants_updated_at \nFROM tenants \nWHERE tenants.id = %(pk_1)s::VARCHAR", "module": "base", "function": "_execute_context", "line": 1846, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:16:47.285386+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[generated in 0.00007s] {'pk_1': 'default'}", "module": "base", "function": "_execute_context", "line": 1846, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:16:47.294853+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT users.id AS users_id, users.email AS users_email, users.username AS users_username, users.hashed_password AS users_hashed_password, users.is_active AS users_is_active, users.is_superuser AS users_is_superuser, users.role AS users_role, users.tenant_id AS users_tenant_id, users.created_at AS users_created_at, users.updated_at AS users_updated_at \nFROM users \n LIMIT %(param_1)s::INTEGER", "module": "base", "function": "_execute_context", "line": 1846, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:16:47.294879+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[generated in 0.00005s] {'param_1': 1}", "module": "base", "function": "_execute_context", "line": 1846, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:16:47.298470+00:00", "level": "INFO", "logger": "app.db.init_db", "message": "Database already has data, skipping user initialization", "module": "init_db", "function": "create_initial_data", "line": 75, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:16:47.303211+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)", "module": "base", "function": "_connection_begin_impl", "line": 2701, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:16:47.304223+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT pg_catalog.pg_class.relname \nFROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace \nWHERE pg_catalog.pg_class.relname = %(table_name)s::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s::VARCHAR, %(param_2)s::VARCHAR, %(param_3)s::VARCHAR, %(param_4)s::VARCHAR, %(param_5)s::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s::VARCHAR", "module": "base", "function": "_execute_context", "line": 1846, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:16:47.304255+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[generated in 0.00007s] {'table_name': 'marketplace_templates', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}", "module": "base", "function": "_execute_context", "line": 1846, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:16:47.310060+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "COMMIT", "module": "base", "function": "_connection_commit_impl", "line": 2707, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:16:47.310679+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT marketplace_templates.id AS marketplace_templates_id, marketplace_templates.key AS marketplace_templates_key, marketplace_templates.name AS marketplace_templates_name, marketplace_templates.vertical AS marketplace_templates_vertical, marketplace_templates.description AS marketplace_templates_description, marketplace_templates.required_tools AS marketplace_templates_required_tools, marketplace_templates.default_config AS marketplace_templates_default_config, marketplace_templates.version AS marketplace_templates_version, marketplace_templates.enabled AS marketplace_templates_enabled, marketplace_templates.created_at AS marketplace_templates_created_at, marketplace_templates.updated_at AS marketplace_templates_updated_at \nFROM marketplace_templates", "module": "base", "function": "_execute_context", "line": 1846, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:16:47.310705+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[generated in 0.00004s] {}", "module": "base", "function": "_execute_context", "line": 1846, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:16:47.318985+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "INSERT INTO marketplace_templates (key, name, vertical, description, required_tools, default_config, version, enabled, created_at, updated_at) SELECT p0::VARCHAR, p1::VARCHAR, p2::VARCHAR, p3::VARCHAR, p4::JSONB, p5::JSONB, p6::VARCHAR, p7::BOOLEAN,  ... 1890 characters truncated ... _counter) ORDER BY sen_counter RETURNING marketplace_templates.id, marketplace_templates.id AS id__1", "module": "base", "function": "_execute_context", "line": 1844, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:16:47.319014+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[generated in 0.00008s (insertmanyvalues) 1/1 (ordered)] {'description__0': 'Handle support queries', 'version__0': '1.0', 'enabled__0': True, 'created_at__0': datetime.datetime(2025, 8, 18, 1, 16, 47, 318882, tzinfo=datetime.timezone.utc), 'updated_at__0': datetime.datetime(2025, 8, 18, 1, 16, 47, 318883, tzinfo=datetime.timezone.utc), 'default_config__0': Jsonb({}), 'vertical__0': 'support', 'required_tools__0': Jsonb(['api_caller', 'slack_notifier']), 'key__0': 'cs_agent', 'name__0': 'Customer Support Agent', 'description__1': 'Clean and normalize CSV data', 'version__1': '1.0', 'enabled__1': True, 'created_at__1': datetime.datetime(2025, 8, 18, 1, 16, 47, 318884, tzinfo=datetime.timezone.utc), 'updated_at__1': datetime.datetime(2025, 8, 18, 1, 16, 47, 318884, tzinfo=datetime.timezone.utc), 'default_config__1': Jsonb({}), 'vertical__1': 'ops', 'required_tools__1': Jsonb(['csv_reader', 'csv_writer']), 'key__1': 'data_cleaner', 'name__1': 'Data Cleaner', 'description__2': 'Extract invoice data', 'version__2': '1.0', 'enabled__2': True, 'created_at__2': datetime.datetime(2025, 8, 18, 1, 16, 47, 318885, tzinfo=datetime.timezone.utc), 'updated_at__2': datetime.datetime(2025, 8, 18, 1, 16, 47, 318885, tzinfo=datetime.timezone.utc), 'default_config__2': Jsonb({}), 'vertical__2': 'finance', 'required_tools__2': Jsonb(['api_caller']), 'key__2': 'invoice_processor', 'name__2': 'Invoice Processor', 'description__3': 'Source candidates and outreach', 'version__3': '1.0', 'enabled__3': True, 'created_at__3': datetime.datetime(2025, 8, 18, 1, 16, 47, 318886, tzinfo=datetime.timezone.utc), 'updated_at__3': datetime.datetime(2025, 8, 18, 1, 16, 47, 318886, tzinfo=datetime.timezone.utc), 'default_config__3': Jsonb({}), 'vertical__3': 'hr', 'required_tools__3': Jsonb(['api_caller', 'csv_writer']), 'key__3': 'recruiter_sourcer', 'name__3': 'Recruiter Sourcer', 'description__4': 'Draft social posts', 'version__4': '1.0', 'enabled__4': True, 'created_at__4': datetime.datetime(2025, 8, 18, 1, 16, 47, 318886, tzinfo=datetime.timezone.utc), 'updated_at__4': datetime.datetime(2025, 8, 18, 1, 16, 47, 318887, tzinfo=datetime.timezone.utc), 'default_config__4': Jsonb({}), 'vertical__4': 'marketing', 'required_tools__4': Jsonb(['api_caller']), 'key__4': 'social_copywriter', 'name__4': 'Social Copywriter', 'description__5': 'Build weekly reports', 'version__5': '1.0', 'enabled__5': True, 'created_at__5': datetime.datetime(2025, 8, 18, 1, 16, 47, 318887, tzinfo=datetime.timezone.utc), 'updated_at__5': datetime.datetime(2025, 8, 18, 1, 16, 47, 318887, tzinfo=datetime.timezone.utc), 'default_config__5': Jsonb({}), 'vertical__5': 'analytics', 'required_tools__5': Jsonb(['csv_reader', 'csv_writer']), 'key__5': 'reporting_analyst', 'name__5': 'Reporting Analyst'}", "module": "base", "function": "_execute_context", "line": 1844, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:16:47.327522+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "COMMIT", "module": "base", "function": "_connection_commit_impl", "line": 2707, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:16:47.328873+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)", "module": "base", "function": "_connection_begin_impl", "line": 2701, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:16:47.328940+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT pg_catalog.pg_class.relname \nFROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace \nWHERE pg_catalog.pg_class.relname = %(table_name)s::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s::VARCHAR, %(param_2)s::VARCHAR, %(param_3)s::VARCHAR, %(param_4)s::VARCHAR, %(param_5)s::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s::VARCHAR", "module": "base", "function": "_execute_context", "line": 1846, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:16:47.328964+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[cached since 0.02478s ago] {'table_name': 'tools_registry', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}", "module": "base", "function": "_execute_context", "line": 1846, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:16:47.329759+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "COMMIT", "module": "base", "function": "_connection_commit_impl", "line": 2707, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:16:47.330035+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)", "module": "base", "function": "_connection_begin_impl", "line": 2701, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:16:47.330373+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT tools_registry.id AS tools_registry_id, tools_registry.name AS tools_registry_name, tools_registry.version AS tools_registry_version, tools_registry.scopes AS tools_registry_scopes, tools_registry.config_schema AS tools_registry_config_schema, tools_registry.docs_url AS tools_registry_docs_url, tools_registry.created_at AS tools_registry_created_at, tools_registry.updated_at AS tools_registry_updated_at \nFROM tools_registry", "module": "base", "function": "_execute_context", "line": 1846, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:16:47.330404+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[generated in 0.00005s] {}", "module": "base", "function": "_execute_context", "line": 1846, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:16:47.332559+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "INSERT INTO tools_registry (name, version, scopes, config_schema, docs_url, created_at, updated_at) SELECT p0::VARCHAR, p1::VARCHAR, p2::JSONB, p3::JSONB, p4::VARCHAR, p5::TIMESTAMP WITH TIME ZONE, p6::TIMESTAMP WITH TIME ZONE FROM (VALUES (%(name__0 ... 1113 characters truncated ... 4, p5, p6, sen_counter) ORDER BY sen_counter RETURNING tools_registry.id, tools_registry.id AS id__1", "module": "base", "function": "_execute_context", "line": 1844, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:16:47.332586+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[generated in 0.00005s (insertmanyvalues) 1/1 (ordered)] {'docs_url__0': 'https://docs.local/tools/excel', 'created_at__0': datetime.datetime(2025, 8, 18, 1, 16, 47, 332485, tzinfo=datetime.timezone.utc), 'version__0': '1.0', 'updated_at__0': datetime.datetime(2025, 8, 18, 1, 16, 47, 332486, tzinfo=datetime.timezone.utc), 'scopes__0': Jsonb(['files:read']), 'config_schema__0': Jsonb({'type': 'object', 'properties': {} ... (52 chars)), 'name__0': 'excel_reader', 'docs_url__1': 'https://docs.local/tools/excel', 'created_at__1': datetime.datetime(2025, 8, 18, 1, 16, 47, 332487, tzinfo=datetime.timezone.utc), 'version__1': '1.0', 'updated_at__1': datetime.datetime(2025, 8, 18, 1, 16, 47, 332487, tzinfo=datetime.timezone.utc), 'scopes__1': Jsonb(['files:write']), 'config_schema__1': Jsonb({'type': 'object', 'properties': {} ... (52 chars)), 'name__1': 'excel_writer', 'docs_url__2': 'https://docs.local/tools/gmail_imap', 'created_at__2': datetime.datetime(2025, 8, 18, 1, 16, 47, 332487, tzinfo=datetime.timezone.utc), 'version__2': '0.1', 'updated_at__2': datetime.datetime(2025, 8, 18, 1, 16, 47, 332488, tzinfo=datetime.timezone.utc), 'scopes__2': Jsonb(['email:read']), 'config_schema__2': Jsonb({'type': 'object', 'properties': {' ... (82 chars)), 'name__2': 'gmail_imap', 'docs_url__3': 'https://learn.microsoft.com/microsoftteams/platform/webhooks-and-connectors/how-to/add-incoming-webhook', 'created_at__3': datetime.datetime(2025, 8, 18, 1, 16, 47, 332488, tzinfo=datetime.timezone.utc), 'version__3': '0.1', 'updated_at__3': datetime.datetime(2025, 8, 18, 1, 16, 47, 332488, tzinfo=datetime.timezone.utc), 'scopes__3': Jsonb(['teams:send']), 'config_schema__3': Jsonb({'type': 'object', 'properties': {' ... (85 chars)), 'name__3': 'ms_teams', 'docs_url__4': 'https://developers.google.com/drive/api', 'created_at__4': datetime.datetime(2025, 8, 18, 1, 16, 47, 332489, tzinfo=datetime.timezone.utc), 'version__4': '0.1', 'updated_at__4': datetime.datetime(2025, 8, 18, 1, 16, 47, 332489, tzinfo=datetime.timezone.utc), 'scopes__4': Jsonb(['drive:read', 'drive:write']), 'config_schema__4': Jsonb({'type': 'object', 'properties': {} ... (52 chars)), 'name__4': 'gdrive'}", "module": "base", "function": "_execute_context", "line": 1844, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:16:47.333851+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "COMMIT", "module": "base", "function": "_connection_commit_impl", "line": 2707, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:16:47.334655+00:00", "level": "INFO", "logger": "app.db.init_db", "message": "Initial data created successfully (dev)", "module": "init_db", "function": "init_db", "line": 26, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:16:47.344813+00:00", "level": "INFO", "logger": "app.main", "message": "Config summary", "module": "main", "function": "lifespan", "line": 82, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:16:47.345793+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)", "module": "base", "function": "_connection_begin_impl", "line": 2701, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:16:47.346461+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT employees.id AS employees_id, employees.tenant_id AS employees_tenant_id, employees.owner_user_id AS employees_owner_user_id, employees.name AS employees_name, employees.config AS employees_config, employees.active_version_id AS employees_active_version_id, employees.created_at AS employees_created_at, employees.updated_at AS employees_updated_at \nFROM employees", "module": "base", "function": "_execute_context", "line": 1846, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:16:47.346509+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[generated in 0.00009s] {}", "module": "base", "function": "_execute_context", "line": 1846, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:16:47.349483+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "ROLLBACK", "module": "base", "function": "_connection_rollback_impl", "line": 2704, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:16:47.349773+00:00", "level": "INFO", "logger": "uvicorn.error", "message": "Application startup complete.", "module": "on", "function": "startup", "line": 62, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:16:54.117687+00:00", "level": "INFO", "logger": "app.main", "message": "Request start", "module": "main", "function": "audit_logging_middleware", "line": 231, "trace_id": "08906a8bf38549968a7de920efc88e59", "tenant_id": "", "user_id": "", "request_method": "GET", "request_path": "/api/v1/health/live", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:16:54.125253+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)", "module": "base", "function": "_connection_begin_impl", "line": 2701, "trace_id": "08906a8bf38549968a7de920efc88e59", "tenant_id": "", "user_id": "", "request_method": "GET", "request_path": "/api/v1/health/live", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:16:54.128038+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "INSERT INTO audit_logs (tenant_id, user_id, action, method, path, status_code, timestamp, meta) VALUES (%(tenant_id)s::VARCHAR, %(user_id)s::INTEGER, %(action)s::VARCHAR, %(method)s::VARCHAR, %(path)s::VARCHAR, %(status_code)s::INTEGER, %(timestamp)s::TIMESTAMP WITH TIME ZONE, %(meta)s::JSONB) RETURNING audit_logs.id", "module": "base", "function": "_execute_context", "line": 1846, "trace_id": "08906a8bf38549968a7de920efc88e59", "tenant_id": "", "user_id": "", "request_method": "GET", "request_path": "/api/v1/health/live", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:16:54.128132+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[generated in 0.00032s] {'tenant_id': None, 'user_id': None, 'action': 'http_request', 'method': 'GET', 'path': '/api/v1/health/live', 'status_code': 200, 'timestamp': datetime.datetime(2025, 8, 18, 1, 16, 54, 127909, tzinfo=datetime.timezone.utc), 'meta': Jsonb({'query': {}, 'client_ip': '127.0.0 ... (105 chars))}", "module": "base", "function": "_execute_context", "line": 1846, "trace_id": "08906a8bf38549968a7de920efc88e59", "tenant_id": "", "user_id": "", "request_method": "GET", "request_path": "/api/v1/health/live", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:16:54.136874+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "ROLLBACK", "module": "base", "function": "_connection_rollback_impl", "line": 2704, "trace_id": "08906a8bf38549968a7de920efc88e59", "tenant_id": "", "user_id": "", "request_method": "GET", "request_path": "/api/v1/health/live", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:16:54.137308+00:00", "level": "INFO", "logger": "app.main", "message": "Request end", "module": "main", "function": "audit_logging_middleware", "line": 324, "trace_id": "08906a8bf38549968a7de920efc88e59", "tenant_id": "", "user_id": "", "request_method": "GET", "request_path": "/api/v1/health/live", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:16:54.137479+00:00", "level": "INFO", "logger": "uvicorn.access", "message": "127.0.0.1:58506 - \"GET /api/v1/health/live HTTP/1.1\" 200", "module": "httptools_impl", "function": "send", "line": 466, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:17:47.372129+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)", "module": "base", "function": "_connection_begin_impl", "line": 2701, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:17:47.373294+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT employees.id AS employees_id, employees.tenant_id AS employees_tenant_id, employees.owner_user_id AS employees_owner_user_id, employees.name AS employees_name, employees.config AS employees_config, employees.active_version_id AS employees_active_version_id, employees.created_at AS employees_created_at, employees.updated_at AS employees_updated_at \nFROM employees", "module": "base", "function": "_execute_context", "line": 1846, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:17:47.373560+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[cached since 60.03s ago] {}", "module": "base", "function": "_execute_context", "line": 1846, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:17:47.388452+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "ROLLBACK", "module": "base", "function": "_connection_rollback_impl", "line": 2704, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:18:47.404375+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)", "module": "base", "function": "_connection_begin_impl", "line": 2701, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:18:47.406199+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT employees.id AS employees_id, employees.tenant_id AS employees_tenant_id, employees.owner_user_id AS employees_owner_user_id, employees.name AS employees_name, employees.config AS employees_config, employees.active_version_id AS employees_active_version_id, employees.created_at AS employees_created_at, employees.updated_at AS employees_updated_at \nFROM employees", "module": "base", "function": "_execute_context", "line": 1846, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:18:47.406647+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[cached since 120.1s ago] {}", "module": "base", "function": "_execute_context", "line": 1846, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:18:47.422782+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "ROLLBACK", "module": "base", "function": "_connection_rollback_impl", "line": 2704, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
WARNING:  WatchFiles detected changes in 'alembic/versions/0a0d0717a24e_init_placeholder.py'. Reloading...
{"timestamp": "2025-08-18T01:19:12.381474+00:00", "level": "INFO", "logger": "uvicorn.error", "message": "Shutting down", "module": "server", "function": "shutdown", "line": 258, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:19:12.483231+00:00", "level": "INFO", "logger": "uvicorn.error", "message": "Waiting for application shutdown.", "module": "on", "function": "shutdown", "line": 67, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:19:12.486380+00:00", "level": "INFO", "logger": "uvicorn.error", "message": "Application shutdown complete.", "module": "on", "function": "shutdown", "line": 76, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:19:12.487270+00:00", "level": "INFO", "logger": "uvicorn.error", "message": "Finished server process [23691]", "module": "server", "function": "_serve", "line": 92, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
/Users/shaheer/Forge_1/backend/.venv/lib/python3.13/site-packages/pydantic/_internal/_fields.py:161: UserWarning: Field "model_name" has conflict with protected namespace "model_".

You may be able to resolve this warning by setting `model_config['protected_namespaces'] = ()`.
  warnings.warn(
/Users/shaheer/Forge_1/backend/.venv/lib/python3.13/site-packages/pydantic/_internal/_fields.py:161: UserWarning: Field "model_used" has conflict with protected namespace "model_".

You may be able to resolve this warning by setting `model_config['protected_namespaces'] = ()`.
  warnings.warn(
/Users/shaheer/Forge_1/backend/.venv/lib/python3.13/site-packages/pydantic/_internal/_fields.py:161: UserWarning: Field "model_used" has conflict with protected namespace "model_".

You may be able to resolve this warning by setting `model_config['protected_namespaces'] = ()`.
  warnings.warn(
{"timestamp": "2025-08-18T01:19:13.855631+00:00", "level": "INFO", "logger": "uvicorn.error", "message": "Started server process [25109]", "module": "server", "function": "_serve", "line": 82, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:19:13.855698+00:00", "level": "INFO", "logger": "uvicorn.error", "message": "Waiting for application startup.", "module": "on", "function": "startup", "line": 48, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:19:13.855815+00:00", "level": "INFO", "logger": "app.db.init_db", "message": "Database tables created successfully", "module": "init_db", "function": "init_db", "line": 18, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:19:13.889385+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "select pg_catalog.version()", "module": "base", "function": "_execute_context", "line": 1846, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:19:13.889442+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}", "module": "base", "function": "_execute_context", "line": 1846, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:19:13.891276+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "select current_schema()", "module": "base", "function": "_execute_context", "line": 1846, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:19:13.891298+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}", "module": "base", "function": "_execute_context", "line": 1846, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:19:13.893001+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "show standard_conforming_strings", "module": "base", "function": "_execute_context", "line": 1846, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:19:13.893017+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}", "module": "base", "function": "_execute_context", "line": 1846, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:19:13.901846+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)", "module": "base", "function": "_connection_begin_impl", "line": 2701, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:19:13.910515+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT tenants.id AS tenants_id, tenants.name AS tenants_name, tenants.beta AS tenants_beta, tenants.created_at AS tenants_created_at, tenants.updated_at AS tenants_updated_at \nFROM tenants \nWHERE tenants.id = %(pk_1)s::VARCHAR", "module": "base", "function": "_execute_context", "line": 1846, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:19:13.910546+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[generated in 0.00007s] {'pk_1': 'default'}", "module": "base", "function": "_execute_context", "line": 1846, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:19:13.914547+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT users.id AS users_id, users.email AS users_email, users.username AS users_username, users.hashed_password AS users_hashed_password, users.is_active AS users_is_active, users.is_superuser AS users_is_superuser, users.role AS users_role, users.tenant_id AS users_tenant_id, users.created_at AS users_created_at, users.updated_at AS users_updated_at \nFROM users \n LIMIT %(param_1)s::INTEGER", "module": "base", "function": "_execute_context", "line": 1846, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:19:13.914571+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[generated in 0.00005s] {'param_1': 1}", "module": "base", "function": "_execute_context", "line": 1846, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:19:13.916180+00:00", "level": "INFO", "logger": "app.db.init_db", "message": "Database already has data, skipping user initialization", "module": "init_db", "function": "create_initial_data", "line": 75, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:19:13.920822+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)", "module": "base", "function": "_connection_begin_impl", "line": 2701, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:19:13.921727+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT pg_catalog.pg_class.relname \nFROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace \nWHERE pg_catalog.pg_class.relname = %(table_name)s::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s::VARCHAR, %(param_2)s::VARCHAR, %(param_3)s::VARCHAR, %(param_4)s::VARCHAR, %(param_5)s::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s::VARCHAR", "module": "base", "function": "_execute_context", "line": 1846, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:19:13.921750+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[generated in 0.00005s] {'table_name': 'marketplace_templates', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}", "module": "base", "function": "_execute_context", "line": 1846, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:19:13.926291+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "COMMIT", "module": "base", "function": "_connection_commit_impl", "line": 2707, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:19:13.926809+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT marketplace_templates.id AS marketplace_templates_id, marketplace_templates.key AS marketplace_templates_key, marketplace_templates.name AS marketplace_templates_name, marketplace_templates.vertical AS marketplace_templates_vertical, marketplace_templates.description AS marketplace_templates_description, marketplace_templates.required_tools AS marketplace_templates_required_tools, marketplace_templates.default_config AS marketplace_templates_default_config, marketplace_templates.version AS marketplace_templates_version, marketplace_templates.enabled AS marketplace_templates_enabled, marketplace_templates.created_at AS marketplace_templates_created_at, marketplace_templates.updated_at AS marketplace_templates_updated_at \nFROM marketplace_templates", "module": "base", "function": "_execute_context", "line": 1846, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:19:13.926830+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[generated in 0.00004s] {}", "module": "base", "function": "_execute_context", "line": 1846, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:19:13.928213+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "COMMIT", "module": "base", "function": "_connection_commit_impl", "line": 2707, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:19:13.928468+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)", "module": "base", "function": "_connection_begin_impl", "line": 2701, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:19:13.928522+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT pg_catalog.pg_class.relname \nFROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace \nWHERE pg_catalog.pg_class.relname = %(table_name)s::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s::VARCHAR, %(param_2)s::VARCHAR, %(param_3)s::VARCHAR, %(param_4)s::VARCHAR, %(param_5)s::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s::VARCHAR", "module": "base", "function": "_execute_context", "line": 1846, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:19:13.928540+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[cached since 0.006845s ago] {'table_name': 'tools_registry', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}", "module": "base", "function": "_execute_context", "line": 1846, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:19:13.929029+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "COMMIT", "module": "base", "function": "_connection_commit_impl", "line": 2707, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:19:13.929272+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)", "module": "base", "function": "_connection_begin_impl", "line": 2701, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:19:13.929532+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT tools_registry.id AS tools_registry_id, tools_registry.name AS tools_registry_name, tools_registry.version AS tools_registry_version, tools_registry.scopes AS tools_registry_scopes, tools_registry.config_schema AS tools_registry_config_schema, tools_registry.docs_url AS tools_registry_docs_url, tools_registry.created_at AS tools_registry_created_at, tools_registry.updated_at AS tools_registry_updated_at \nFROM tools_registry", "module": "base", "function": "_execute_context", "line": 1846, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:19:13.929552+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[generated in 0.00003s] {}", "module": "base", "function": "_execute_context", "line": 1846, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:19:13.930497+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "COMMIT", "module": "base", "function": "_connection_commit_impl", "line": 2707, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:19:13.930617+00:00", "level": "INFO", "logger": "app.db.init_db", "message": "Initial data created successfully (dev)", "module": "init_db", "function": "init_db", "line": 26, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:19:13.932912+00:00", "level": "INFO", "logger": "app.main", "message": "Config summary", "module": "main", "function": "lifespan", "line": 82, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:19:13.933322+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)", "module": "base", "function": "_connection_begin_impl", "line": 2701, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:19:13.933652+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT employees.id AS employees_id, employees.tenant_id AS employees_tenant_id, employees.owner_user_id AS employees_owner_user_id, employees.name AS employees_name, employees.config AS employees_config, employees.active_version_id AS employees_active_version_id, employees.created_at AS employees_created_at, employees.updated_at AS employees_updated_at \nFROM employees", "module": "base", "function": "_execute_context", "line": 1846, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:19:13.933679+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[generated in 0.00004s] {}", "module": "base", "function": "_execute_context", "line": 1846, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:19:13.935088+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "ROLLBACK", "module": "base", "function": "_connection_rollback_impl", "line": 2704, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:19:13.935255+00:00", "level": "INFO", "logger": "uvicorn.error", "message": "Application startup complete.", "module": "on", "function": "startup", "line": 62, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:20:13.946403+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)", "module": "base", "function": "_connection_begin_impl", "line": 2701, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:20:13.948160+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT employees.id AS employees_id, employees.tenant_id AS employees_tenant_id, employees.owner_user_id AS employees_owner_user_id, employees.name AS employees_name, employees.config AS employees_config, employees.active_version_id AS employees_active_version_id, employees.created_at AS employees_created_at, employees.updated_at AS employees_updated_at \nFROM employees", "module": "base", "function": "_execute_context", "line": 1846, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:20:13.948279+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[cached since 60.01s ago] {}", "module": "base", "function": "_execute_context", "line": 1846, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:20:13.952158+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "ROLLBACK", "module": "base", "function": "_connection_rollback_impl", "line": 2704, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:21:03.361984+00:00", "level": "INFO", "logger": "app.main", "message": "Request start", "module": "main", "function": "audit_logging_middleware", "line": 231, "trace_id": "0397b7720a2e47bdbe1550a99dbfd839", "tenant_id": "", "user_id": "", "request_method": "GET", "request_path": "/api/v1/client/metrics/active", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:21:03.367645+00:00", "level": "INFO", "logger": "app.main", "message": "Request start", "module": "main", "function": "audit_logging_middleware", "line": 231, "trace_id": "7d69f00e6b4d4bcca3f187f7a29c6057", "tenant_id": "", "user_id": "", "request_method": "GET", "request_path": "/api/v1/client/metrics/summary", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:21:03.383671+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)", "module": "base", "function": "_connection_begin_impl", "line": 2701, "trace_id": "0397b7720a2e47bdbe1550a99dbfd839", "tenant_id": "", "user_id": "", "request_method": "GET", "request_path": "/api/v1/client/metrics/active", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:21:03.396389+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "INSERT INTO audit_logs (tenant_id, user_id, action, method, path, status_code, timestamp, meta) VALUES (%(tenant_id)s::VARCHAR, %(user_id)s::INTEGER, %(action)s::VARCHAR, %(method)s::VARCHAR, %(path)s::VARCHAR, %(status_code)s::INTEGER, %(timestamp)s::TIMESTAMP WITH TIME ZONE, %(meta)s::JSONB) RETURNING audit_logs.id", "module": "base", "function": "_execute_context", "line": 1846, "trace_id": "0397b7720a2e47bdbe1550a99dbfd839", "tenant_id": "", "user_id": "", "request_method": "GET", "request_path": "/api/v1/client/metrics/active", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:21:03.396769+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[generated in 0.00099s] {'tenant_id': None, 'user_id': None, 'action': 'http_request', 'method': 'GET', 'path': '/api/v1/client/metrics/active', 'status_code': 401, 'timestamp': datetime.datetime(2025, 8, 18, 1, 21, 3, 395850, tzinfo=datetime.timezone.utc), 'meta': Jsonb({'query': {}, 'client_ip': '::ffff: ... (113 chars))}", "module": "base", "function": "_execute_context", "line": 1846, "trace_id": "0397b7720a2e47bdbe1550a99dbfd839", "tenant_id": "", "user_id": "", "request_method": "GET", "request_path": "/api/v1/client/metrics/active", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:21:03.559136+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "ROLLBACK", "module": "base", "function": "_connection_rollback_impl", "line": 2704, "trace_id": "0397b7720a2e47bdbe1550a99dbfd839", "tenant_id": "", "user_id": "", "request_method": "GET", "request_path": "/api/v1/client/metrics/active", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:21:03.559542+00:00", "level": "INFO", "logger": "app.main", "message": "Request end", "module": "main", "function": "audit_logging_middleware", "line": 324, "trace_id": "0397b7720a2e47bdbe1550a99dbfd839", "tenant_id": "", "user_id": "", "request_method": "GET", "request_path": "/api/v1/client/metrics/active", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:21:03.559873+00:00", "level": "INFO", "logger": "uvicorn.access", "message": "::ffff:127.0.0.1:0 - \"GET /api/v1/client/metrics/active HTTP/1.1\" 401", "module": "httptools_impl", "function": "send", "line": 466, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:21:03.561250+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)", "module": "base", "function": "_connection_begin_impl", "line": 2701, "trace_id": "7d69f00e6b4d4bcca3f187f7a29c6057", "tenant_id": "", "user_id": "", "request_method": "GET", "request_path": "/api/v1/client/metrics/summary", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:21:03.561514+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "INSERT INTO audit_logs (tenant_id, user_id, action, method, path, status_code, timestamp, meta) VALUES (%(tenant_id)s::VARCHAR, %(user_id)s::INTEGER, %(action)s::VARCHAR, %(method)s::VARCHAR, %(path)s::VARCHAR, %(status_code)s::INTEGER, %(timestamp)s::TIMESTAMP WITH TIME ZONE, %(meta)s::JSONB) RETURNING audit_logs.id", "module": "base", "function": "_execute_context", "line": 1846, "trace_id": "7d69f00e6b4d4bcca3f187f7a29c6057", "tenant_id": "", "user_id": "", "request_method": "GET", "request_path": "/api/v1/client/metrics/summary", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:21:03.561566+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[cached since 0.1659s ago] {'tenant_id': None, 'user_id': None, 'action': 'http_request', 'method': 'GET', 'path': '/api/v1/client/metrics/summary', 'status_code': 401, 'timestamp': datetime.datetime(2025, 8, 18, 1, 21, 3, 561488, tzinfo=datetime.timezone.utc), 'meta': Jsonb({'query': {}, 'client_ip': '::ffff: ... (114 chars))}", "module": "base", "function": "_execute_context", "line": 1846, "trace_id": "7d69f00e6b4d4bcca3f187f7a29c6057", "tenant_id": "", "user_id": "", "request_method": "GET", "request_path": "/api/v1/client/metrics/summary", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:21:03.562405+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "ROLLBACK", "module": "base", "function": "_connection_rollback_impl", "line": 2704, "trace_id": "7d69f00e6b4d4bcca3f187f7a29c6057", "tenant_id": "", "user_id": "", "request_method": "GET", "request_path": "/api/v1/client/metrics/summary", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:21:03.562632+00:00", "level": "INFO", "logger": "app.main", "message": "Request end", "module": "main", "function": "audit_logging_middleware", "line": 324, "trace_id": "7d69f00e6b4d4bcca3f187f7a29c6057", "tenant_id": "", "user_id": "", "request_method": "GET", "request_path": "/api/v1/client/metrics/summary", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:21:03.562895+00:00", "level": "INFO", "logger": "uvicorn.access", "message": "::ffff:127.0.0.1:0 - \"GET /api/v1/client/metrics/summary HTTP/1.1\" 401", "module": "httptools_impl", "function": "send", "line": 466, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:21:03.579867+00:00", "level": "INFO", "logger": "app.main", "message": "Request start", "module": "main", "function": "audit_logging_middleware", "line": 231, "trace_id": "bb77213d3cba45c4a0be0d76729d4e51", "tenant_id": "", "user_id": "", "request_method": "GET", "request_path": "/api/v1/metrics/summary", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:21:03.582014+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)", "module": "base", "function": "_connection_begin_impl", "line": 2701, "trace_id": "bb77213d3cba45c4a0be0d76729d4e51", "tenant_id": "", "user_id": "", "request_method": "GET", "request_path": "/api/v1/metrics/summary", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:21:03.582181+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "INSERT INTO audit_logs (tenant_id, user_id, action, method, path, status_code, timestamp, meta) VALUES (%(tenant_id)s::VARCHAR, %(user_id)s::INTEGER, %(action)s::VARCHAR, %(method)s::VARCHAR, %(path)s::VARCHAR, %(status_code)s::INTEGER, %(timestamp)s::TIMESTAMP WITH TIME ZONE, %(meta)s::JSONB) RETURNING audit_logs.id", "module": "base", "function": "_execute_context", "line": 1846, "trace_id": "bb77213d3cba45c4a0be0d76729d4e51", "tenant_id": "", "user_id": "", "request_method": "GET", "request_path": "/api/v1/metrics/summary", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:21:03.582222+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[cached since 0.1865s ago] {'tenant_id': None, 'user_id': None, 'action': 'http_request', 'method': 'GET', 'path': '/api/v1/metrics/summary', 'status_code': 401, 'timestamp': datetime.datetime(2025, 8, 18, 1, 21, 3, 582156, tzinfo=datetime.timezone.utc), 'meta': Jsonb({'query': {}, 'client_ip': '::ffff: ... (112 chars))}", "module": "base", "function": "_execute_context", "line": 1846, "trace_id": "bb77213d3cba45c4a0be0d76729d4e51", "tenant_id": "", "user_id": "", "request_method": "GET", "request_path": "/api/v1/metrics/summary", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:21:03.584556+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "ROLLBACK", "module": "base", "function": "_connection_rollback_impl", "line": 2704, "trace_id": "bb77213d3cba45c4a0be0d76729d4e51", "tenant_id": "", "user_id": "", "request_method": "GET", "request_path": "/api/v1/metrics/summary", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:21:03.585190+00:00", "level": "INFO", "logger": "app.main", "message": "Request end", "module": "main", "function": "audit_logging_middleware", "line": 324, "trace_id": "bb77213d3cba45c4a0be0d76729d4e51", "tenant_id": "", "user_id": "", "request_method": "GET", "request_path": "/api/v1/metrics/summary", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:21:03.585395+00:00", "level": "INFO", "logger": "uvicorn.access", "message": "::ffff:127.0.0.1:0 - \"GET /api/v1/metrics/summary HTTP/1.1\" 401", "module": "httptools_impl", "function": "send", "line": 466, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:21:13.296686+00:00", "level": "INFO", "logger": "app.main", "message": "Request start", "module": "main", "function": "audit_logging_middleware", "line": 231, "trace_id": "c5c2b9f293fc4275afdd274da042311f", "tenant_id": "", "user_id": "", "request_method": "GET", "request_path": "/api/v1/employees", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:21:13.301941+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)", "module": "base", "function": "_connection_begin_impl", "line": 2701, "trace_id": "c5c2b9f293fc4275afdd274da042311f", "tenant_id": "", "user_id": "", "request_method": "GET", "request_path": "/api/v1/employees", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:21:13.302718+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "INSERT INTO audit_logs (tenant_id, user_id, action, method, path, status_code, timestamp, meta) VALUES (%(tenant_id)s::VARCHAR, %(user_id)s::INTEGER, %(action)s::VARCHAR, %(method)s::VARCHAR, %(path)s::VARCHAR, %(status_code)s::INTEGER, %(timestamp)s::TIMESTAMP WITH TIME ZONE, %(meta)s::JSONB) RETURNING audit_logs.id", "module": "base", "function": "_execute_context", "line": 1846, "trace_id": "c5c2b9f293fc4275afdd274da042311f", "tenant_id": "", "user_id": "", "request_method": "GET", "request_path": "/api/v1/employees", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:21:13.302843+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[cached since 9.907s ago] {'tenant_id': None, 'user_id': None, 'action': 'http_request', 'method': 'GET', 'path': '/api/v1/employees', 'status_code': 401, 'timestamp': datetime.datetime(2025, 8, 18, 1, 21, 13, 302626, tzinfo=datetime.timezone.utc), 'meta': Jsonb({'query': {}, 'client_ip': '::ffff: ... (112 chars))}", "module": "base", "function": "_execute_context", "line": 1846, "trace_id": "c5c2b9f293fc4275afdd274da042311f", "tenant_id": "", "user_id": "", "request_method": "GET", "request_path": "/api/v1/employees", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:21:13.305052+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "ROLLBACK", "module": "base", "function": "_connection_rollback_impl", "line": 2704, "trace_id": "c5c2b9f293fc4275afdd274da042311f", "tenant_id": "", "user_id": "", "request_method": "GET", "request_path": "/api/v1/employees", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:21:13.305332+00:00", "level": "INFO", "logger": "app.main", "message": "Request end", "module": "main", "function": "audit_logging_middleware", "line": 324, "trace_id": "c5c2b9f293fc4275afdd274da042311f", "tenant_id": "", "user_id": "", "request_method": "GET", "request_path": "/api/v1/employees", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:21:13.305523+00:00", "level": "INFO", "logger": "uvicorn.access", "message": "::ffff:127.0.0.1:0 - \"GET /api/v1/employees HTTP/1.1\" 401", "module": "httptools_impl", "function": "send", "line": 466, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:21:13.956252+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)", "module": "base", "function": "_connection_begin_impl", "line": 2701, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:21:13.956935+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT employees.id AS employees_id, employees.tenant_id AS employees_tenant_id, employees.owner_user_id AS employees_owner_user_id, employees.name AS employees_name, employees.config AS employees_config, employees.active_version_id AS employees_active_version_id, employees.created_at AS employees_created_at, employees.updated_at AS employees_updated_at \nFROM employees", "module": "base", "function": "_execute_context", "line": 1846, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:21:13.957080+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[cached since 120s ago] {}", "module": "base", "function": "_execute_context", "line": 1846, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:21:13.960307+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "ROLLBACK", "module": "base", "function": "_connection_rollback_impl", "line": 2704, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:21:49.871595+00:00", "level": "INFO", "logger": "app.main", "message": "Request start", "module": "main", "function": "audit_logging_middleware", "line": 231, "trace_id": "73599ee9b1544ca9ad7e32318bc753ae", "tenant_id": "", "user_id": "", "request_method": "GET", "request_path": "/api/v1/health/live", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:21:49.912277+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)", "module": "base", "function": "_connection_begin_impl", "line": 2701, "trace_id": "73599ee9b1544ca9ad7e32318bc753ae", "tenant_id": "", "user_id": "", "request_method": "GET", "request_path": "/api/v1/health/live", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:21:49.920384+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "INSERT INTO audit_logs (tenant_id, user_id, action, method, path, status_code, timestamp, meta) VALUES (%(tenant_id)s::VARCHAR, %(user_id)s::INTEGER, %(action)s::VARCHAR, %(method)s::VARCHAR, %(path)s::VARCHAR, %(status_code)s::INTEGER, %(timestamp)s::TIMESTAMP WITH TIME ZONE, %(meta)s::JSONB) RETURNING audit_logs.id", "module": "base", "function": "_execute_context", "line": 1846, "trace_id": "73599ee9b1544ca9ad7e32318bc753ae", "tenant_id": "", "user_id": "", "request_method": "GET", "request_path": "/api/v1/health/live", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:21:49.920620+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[cached since 46.52s ago] {'tenant_id': None, 'user_id': None, 'action': 'http_request', 'method': 'GET', 'path': '/api/v1/health/live', 'status_code': 200, 'timestamp': datetime.datetime(2025, 8, 18, 1, 21, 49, 920181, tzinfo=datetime.timezone.utc), 'meta': Jsonb({'query': {}, 'client_ip': '127.0.0 ... (106 chars))}", "module": "base", "function": "_execute_context", "line": 1846, "trace_id": "73599ee9b1544ca9ad7e32318bc753ae", "tenant_id": "", "user_id": "", "request_method": "GET", "request_path": "/api/v1/health/live", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:21:49.956710+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "ROLLBACK", "module": "base", "function": "_connection_rollback_impl", "line": 2704, "trace_id": "73599ee9b1544ca9ad7e32318bc753ae", "tenant_id": "", "user_id": "", "request_method": "GET", "request_path": "/api/v1/health/live", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:21:49.957965+00:00", "level": "INFO", "logger": "app.main", "message": "Request end", "module": "main", "function": "audit_logging_middleware", "line": 324, "trace_id": "73599ee9b1544ca9ad7e32318bc753ae", "tenant_id": "", "user_id": "", "request_method": "GET", "request_path": "/api/v1/health/live", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:21:49.958901+00:00", "level": "INFO", "logger": "uvicorn.access", "message": "127.0.0.1:58652 - \"GET /api/v1/health/live HTTP/1.1\" 200", "module": "httptools_impl", "function": "send", "line": 466, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:22:13.970018+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)", "module": "base", "function": "_connection_begin_impl", "line": 2701, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:22:13.972459+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT employees.id AS employees_id, employees.tenant_id AS employees_tenant_id, employees.owner_user_id AS employees_owner_user_id, employees.name AS employees_name, employees.config AS employees_config, employees.active_version_id AS employees_active_version_id, employees.created_at AS employees_created_at, employees.updated_at AS employees_updated_at \nFROM employees", "module": "base", "function": "_execute_context", "line": 1846, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:22:13.972784+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[cached since 180s ago] {}", "module": "base", "function": "_execute_context", "line": 1846, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:22:13.982218+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "ROLLBACK", "module": "base", "function": "_connection_rollback_impl", "line": 2704, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:22:48.041084+00:00", "level": "INFO", "logger": "app.main", "message": "Request start", "module": "main", "function": "audit_logging_middleware", "line": 231, "trace_id": "791541b510d54b08a8469bfd28161df5", "tenant_id": "", "user_id": "", "request_method": "GET", "request_path": "/api/v1/employees", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:22:48.045616+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)", "module": "base", "function": "_connection_begin_impl", "line": 2701, "trace_id": "791541b510d54b08a8469bfd28161df5", "tenant_id": "", "user_id": "", "request_method": "GET", "request_path": "/api/v1/employees", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:22:48.046687+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "INSERT INTO audit_logs (tenant_id, user_id, action, method, path, status_code, timestamp, meta) VALUES (%(tenant_id)s::VARCHAR, %(user_id)s::INTEGER, %(action)s::VARCHAR, %(method)s::VARCHAR, %(path)s::VARCHAR, %(status_code)s::INTEGER, %(timestamp)s::TIMESTAMP WITH TIME ZONE, %(meta)s::JSONB) RETURNING audit_logs.id", "module": "base", "function": "_execute_context", "line": 1846, "trace_id": "791541b510d54b08a8469bfd28161df5", "tenant_id": "", "user_id": "", "request_method": "GET", "request_path": "/api/v1/employees", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:22:48.046812+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[cached since 104.6s ago] {'tenant_id': None, 'user_id': None, 'action': 'http_request', 'method': 'GET', 'path': '/api/v1/employees', 'status_code': 401, 'timestamp': datetime.datetime(2025, 8, 18, 1, 22, 48, 46579, tzinfo=datetime.timezone.utc), 'meta': Jsonb({'query': {}, 'client_ip': '::ffff: ... (112 chars))}", "module": "base", "function": "_execute_context", "line": 1846, "trace_id": "791541b510d54b08a8469bfd28161df5", "tenant_id": "", "user_id": "", "request_method": "GET", "request_path": "/api/v1/employees", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:22:48.049383+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "ROLLBACK", "module": "base", "function": "_connection_rollback_impl", "line": 2704, "trace_id": "791541b510d54b08a8469bfd28161df5", "tenant_id": "", "user_id": "", "request_method": "GET", "request_path": "/api/v1/employees", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:22:48.049662+00:00", "level": "INFO", "logger": "app.main", "message": "Request end", "module": "main", "function": "audit_logging_middleware", "line": 324, "trace_id": "791541b510d54b08a8469bfd28161df5", "tenant_id": "", "user_id": "", "request_method": "GET", "request_path": "/api/v1/employees", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:22:48.049874+00:00", "level": "INFO", "logger": "uvicorn.access", "message": "::ffff:127.0.0.1:0 - \"GET /api/v1/employees HTTP/1.1\" 401", "module": "httptools_impl", "function": "send", "line": 466, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:23:13.995333+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)", "module": "base", "function": "_connection_begin_impl", "line": 2701, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:23:14.007516+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT employees.id AS employees_id, employees.tenant_id AS employees_tenant_id, employees.owner_user_id AS employees_owner_user_id, employees.name AS employees_name, employees.config AS employees_config, employees.active_version_id AS employees_active_version_id, employees.created_at AS employees_created_at, employees.updated_at AS employees_updated_at \nFROM employees", "module": "base", "function": "_execute_context", "line": 1846, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:23:14.008060+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[cached since 240.1s ago] {}", "module": "base", "function": "_execute_context", "line": 1846, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:23:14.012764+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "ROLLBACK", "module": "base", "function": "_connection_rollback_impl", "line": 2704, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:24:13.497784+00:00", "level": "INFO", "logger": "app.main", "message": "Request start", "module": "main", "function": "audit_logging_middleware", "line": 231, "trace_id": "d7515fea86764d4a90b1102d0bc43b58", "tenant_id": "", "user_id": "", "request_method": "GET", "request_path": "/api/v1/client/metrics/summary", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:24:13.504128+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)", "module": "base", "function": "_connection_begin_impl", "line": 2701, "trace_id": "d7515fea86764d4a90b1102d0bc43b58", "tenant_id": "", "user_id": "", "request_method": "GET", "request_path": "/api/v1/client/metrics/summary", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:24:13.505235+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "INSERT INTO audit_logs (tenant_id, user_id, action, method, path, status_code, timestamp, meta) VALUES (%(tenant_id)s::VARCHAR, %(user_id)s::INTEGER, %(action)s::VARCHAR, %(method)s::VARCHAR, %(path)s::VARCHAR, %(status_code)s::INTEGER, %(timestamp)s::TIMESTAMP WITH TIME ZONE, %(meta)s::JSONB) RETURNING audit_logs.id", "module": "base", "function": "_execute_context", "line": 1846, "trace_id": "d7515fea86764d4a90b1102d0bc43b58", "tenant_id": "", "user_id": "", "request_method": "GET", "request_path": "/api/v1/client/metrics/summary", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:24:13.505323+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[cached since 190.1s ago] {'tenant_id': None, 'user_id': None, 'action': 'http_request', 'method': 'GET', 'path': '/api/v1/client/metrics/summary', 'status_code': 401, 'timestamp': datetime.datetime(2025, 8, 18, 1, 24, 13, 505151, tzinfo=datetime.timezone.utc), 'meta': Jsonb({'query': {}, 'client_ip': '::ffff: ... (112 chars))}", "module": "base", "function": "_execute_context", "line": 1846, "trace_id": "d7515fea86764d4a90b1102d0bc43b58", "tenant_id": "", "user_id": "", "request_method": "GET", "request_path": "/api/v1/client/metrics/summary", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:24:13.526136+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "ROLLBACK", "module": "base", "function": "_connection_rollback_impl", "line": 2704, "trace_id": "d7515fea86764d4a90b1102d0bc43b58", "tenant_id": "", "user_id": "", "request_method": "GET", "request_path": "/api/v1/client/metrics/summary", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:24:13.526552+00:00", "level": "INFO", "logger": "app.main", "message": "Request end", "module": "main", "function": "audit_logging_middleware", "line": 324, "trace_id": "d7515fea86764d4a90b1102d0bc43b58", "tenant_id": "", "user_id": "", "request_method": "GET", "request_path": "/api/v1/client/metrics/summary", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:24:13.526853+00:00", "level": "INFO", "logger": "uvicorn.access", "message": "::ffff:127.0.0.1:0 - \"GET /api/v1/client/metrics/summary HTTP/1.1\" 401", "module": "httptools_impl", "function": "send", "line": 466, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:24:13.540527+00:00", "level": "INFO", "logger": "app.main", "message": "Request start", "module": "main", "function": "audit_logging_middleware", "line": 231, "trace_id": "f61fda080368461bab66a51ba8d3a2cd", "tenant_id": "", "user_id": "", "request_method": "GET", "request_path": "/api/v1/metrics/summary", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:24:13.544311+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)", "module": "base", "function": "_connection_begin_impl", "line": 2701, "trace_id": "f61fda080368461bab66a51ba8d3a2cd", "tenant_id": "", "user_id": "", "request_method": "GET", "request_path": "/api/v1/metrics/summary", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:24:13.544481+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "INSERT INTO audit_logs (tenant_id, user_id, action, method, path, status_code, timestamp, meta) VALUES (%(tenant_id)s::VARCHAR, %(user_id)s::INTEGER, %(action)s::VARCHAR, %(method)s::VARCHAR, %(path)s::VARCHAR, %(status_code)s::INTEGER, %(timestamp)s::TIMESTAMP WITH TIME ZONE, %(meta)s::JSONB) RETURNING audit_logs.id", "module": "base", "function": "_execute_context", "line": 1846, "trace_id": "f61fda080368461bab66a51ba8d3a2cd", "tenant_id": "", "user_id": "", "request_method": "GET", "request_path": "/api/v1/metrics/summary", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:24:13.544531+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[cached since 190.1s ago] {'tenant_id': None, 'user_id': None, 'action': 'http_request', 'method': 'GET', 'path': '/api/v1/metrics/summary', 'status_code': 401, 'timestamp': datetime.datetime(2025, 8, 18, 1, 24, 13, 544458, tzinfo=datetime.timezone.utc), 'meta': Jsonb({'query': {}, 'client_ip': '::ffff: ... (112 chars))}", "module": "base", "function": "_execute_context", "line": 1846, "trace_id": "f61fda080368461bab66a51ba8d3a2cd", "tenant_id": "", "user_id": "", "request_method": "GET", "request_path": "/api/v1/metrics/summary", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:24:13.545236+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "ROLLBACK", "module": "base", "function": "_connection_rollback_impl", "line": 2704, "trace_id": "f61fda080368461bab66a51ba8d3a2cd", "tenant_id": "", "user_id": "", "request_method": "GET", "request_path": "/api/v1/metrics/summary", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:24:13.545484+00:00", "level": "INFO", "logger": "app.main", "message": "Request end", "module": "main", "function": "audit_logging_middleware", "line": 324, "trace_id": "f61fda080368461bab66a51ba8d3a2cd", "tenant_id": "", "user_id": "", "request_method": "GET", "request_path": "/api/v1/metrics/summary", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:24:13.545648+00:00", "level": "INFO", "logger": "uvicorn.access", "message": "::ffff:127.0.0.1:0 - \"GET /api/v1/metrics/summary HTTP/1.1\" 401", "module": "httptools_impl", "function": "send", "line": 466, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:24:14.017826+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)", "module": "base", "function": "_connection_begin_impl", "line": 2701, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:24:14.018542+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT employees.id AS employees_id, employees.tenant_id AS employees_tenant_id, employees.owner_user_id AS employees_owner_user_id, employees.name AS employees_name, employees.config AS employees_config, employees.active_version_id AS employees_active_version_id, employees.created_at AS employees_created_at, employees.updated_at AS employees_updated_at \nFROM employees", "module": "base", "function": "_execute_context", "line": 1846, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:24:14.018685+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[cached since 300.1s ago] {}", "module": "base", "function": "_execute_context", "line": 1846, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:24:14.023557+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "ROLLBACK", "module": "base", "function": "_connection_rollback_impl", "line": 2704, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:24:19.567551+00:00", "level": "INFO", "logger": "app.main", "message": "Request start", "module": "main", "function": "audit_logging_middleware", "line": 231, "trace_id": "4bc946b2c34b4262963677261460737f", "tenant_id": "", "user_id": "", "request_method": "GET", "request_path": "/api/v1/client/metrics/summary", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:24:19.571961+00:00", "level": "INFO", "logger": "app.main", "message": "Request start", "module": "main", "function": "audit_logging_middleware", "line": 231, "trace_id": "6786883b3e9c4b8a8632c0e67b7c1b29", "tenant_id": "", "user_id": "", "request_method": "GET", "request_path": "/api/v1/client/metrics/active", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:24:19.580587+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)", "module": "base", "function": "_connection_begin_impl", "line": 2701, "trace_id": "4bc946b2c34b4262963677261460737f", "tenant_id": "", "user_id": "", "request_method": "GET", "request_path": "/api/v1/client/metrics/summary", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:24:19.581336+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "INSERT INTO audit_logs (tenant_id, user_id, action, method, path, status_code, timestamp, meta) VALUES (%(tenant_id)s::VARCHAR, %(user_id)s::INTEGER, %(action)s::VARCHAR, %(method)s::VARCHAR, %(path)s::VARCHAR, %(status_code)s::INTEGER, %(timestamp)s::TIMESTAMP WITH TIME ZONE, %(meta)s::JSONB) RETURNING audit_logs.id", "module": "base", "function": "_execute_context", "line": 1846, "trace_id": "4bc946b2c34b4262963677261460737f", "tenant_id": "", "user_id": "", "request_method": "GET", "request_path": "/api/v1/client/metrics/summary", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:24:19.581415+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[cached since 196.2s ago] {'tenant_id': None, 'user_id': None, 'action': 'http_request', 'method': 'GET', 'path': '/api/v1/client/metrics/summary', 'status_code': 401, 'timestamp': datetime.datetime(2025, 8, 18, 1, 24, 19, 581265, tzinfo=datetime.timezone.utc), 'meta': Jsonb({'query': {}, 'client_ip': '::ffff: ... (113 chars))}", "module": "base", "function": "_execute_context", "line": 1846, "trace_id": "4bc946b2c34b4262963677261460737f", "tenant_id": "", "user_id": "", "request_method": "GET", "request_path": "/api/v1/client/metrics/summary", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:24:19.582688+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "ROLLBACK", "module": "base", "function": "_connection_rollback_impl", "line": 2704, "trace_id": "4bc946b2c34b4262963677261460737f", "tenant_id": "", "user_id": "", "request_method": "GET", "request_path": "/api/v1/client/metrics/summary", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:24:19.582908+00:00", "level": "INFO", "logger": "app.main", "message": "Request end", "module": "main", "function": "audit_logging_middleware", "line": 324, "trace_id": "4bc946b2c34b4262963677261460737f", "tenant_id": "", "user_id": "", "request_method": "GET", "request_path": "/api/v1/client/metrics/summary", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:24:19.583117+00:00", "level": "INFO", "logger": "uvicorn.access", "message": "::ffff:127.0.0.1:0 - \"GET /api/v1/client/metrics/summary HTTP/1.1\" 401", "module": "httptools_impl", "function": "send", "line": 466, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:24:19.583864+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)", "module": "base", "function": "_connection_begin_impl", "line": 2701, "trace_id": "6786883b3e9c4b8a8632c0e67b7c1b29", "tenant_id": "", "user_id": "", "request_method": "GET", "request_path": "/api/v1/client/metrics/active", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:24:19.583994+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "INSERT INTO audit_logs (tenant_id, user_id, action, method, path, status_code, timestamp, meta) VALUES (%(tenant_id)s::VARCHAR, %(user_id)s::INTEGER, %(action)s::VARCHAR, %(method)s::VARCHAR, %(path)s::VARCHAR, %(status_code)s::INTEGER, %(timestamp)s::TIMESTAMP WITH TIME ZONE, %(meta)s::JSONB) RETURNING audit_logs.id", "module": "base", "function": "_execute_context", "line": 1846, "trace_id": "6786883b3e9c4b8a8632c0e67b7c1b29", "tenant_id": "", "user_id": "", "request_method": "GET", "request_path": "/api/v1/client/metrics/active", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:24:19.584022+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[cached since 196.2s ago] {'tenant_id': None, 'user_id': None, 'action': 'http_request', 'method': 'GET', 'path': '/api/v1/client/metrics/active', 'status_code': 401, 'timestamp': datetime.datetime(2025, 8, 18, 1, 24, 19, 583973, tzinfo=datetime.timezone.utc), 'meta': Jsonb({'query': {}, 'client_ip': '::ffff: ... (113 chars))}", "module": "base", "function": "_execute_context", "line": 1846, "trace_id": "6786883b3e9c4b8a8632c0e67b7c1b29", "tenant_id": "", "user_id": "", "request_method": "GET", "request_path": "/api/v1/client/metrics/active", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:24:19.584566+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "ROLLBACK", "module": "base", "function": "_connection_rollback_impl", "line": 2704, "trace_id": "6786883b3e9c4b8a8632c0e67b7c1b29", "tenant_id": "", "user_id": "", "request_method": "GET", "request_path": "/api/v1/client/metrics/active", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:24:19.584769+00:00", "level": "INFO", "logger": "app.main", "message": "Request end", "module": "main", "function": "audit_logging_middleware", "line": 324, "trace_id": "6786883b3e9c4b8a8632c0e67b7c1b29", "tenant_id": "", "user_id": "", "request_method": "GET", "request_path": "/api/v1/client/metrics/active", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:24:19.585345+00:00", "level": "INFO", "logger": "uvicorn.access", "message": "::ffff:127.0.0.1:0 - \"GET /api/v1/client/metrics/active HTTP/1.1\" 401", "module": "httptools_impl", "function": "send", "line": 466, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:24:19.592496+00:00", "level": "INFO", "logger": "app.main", "message": "Request start", "module": "main", "function": "audit_logging_middleware", "line": 231, "trace_id": "44495bd321e44a85a2486015164c1760", "tenant_id": "", "user_id": "", "request_method": "GET", "request_path": "/api/v1/metrics/summary", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:24:19.595704+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)", "module": "base", "function": "_connection_begin_impl", "line": 2701, "trace_id": "44495bd321e44a85a2486015164c1760", "tenant_id": "", "user_id": "", "request_method": "GET", "request_path": "/api/v1/metrics/summary", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:24:19.595908+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "INSERT INTO audit_logs (tenant_id, user_id, action, method, path, status_code, timestamp, meta) VALUES (%(tenant_id)s::VARCHAR, %(user_id)s::INTEGER, %(action)s::VARCHAR, %(method)s::VARCHAR, %(path)s::VARCHAR, %(status_code)s::INTEGER, %(timestamp)s::TIMESTAMP WITH TIME ZONE, %(meta)s::JSONB) RETURNING audit_logs.id", "module": "base", "function": "_execute_context", "line": 1846, "trace_id": "44495bd321e44a85a2486015164c1760", "tenant_id": "", "user_id": "", "request_method": "GET", "request_path": "/api/v1/metrics/summary", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:24:19.595958+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[cached since 196.2s ago] {'tenant_id': None, 'user_id': None, 'action': 'http_request', 'method': 'GET', 'path': '/api/v1/metrics/summary', 'status_code': 401, 'timestamp': datetime.datetime(2025, 8, 18, 1, 24, 19, 595878, tzinfo=datetime.timezone.utc), 'meta': Jsonb({'query': {}, 'client_ip': '::ffff: ... (112 chars))}", "module": "base", "function": "_execute_context", "line": 1846, "trace_id": "44495bd321e44a85a2486015164c1760", "tenant_id": "", "user_id": "", "request_method": "GET", "request_path": "/api/v1/metrics/summary", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:24:19.596490+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "ROLLBACK", "module": "base", "function": "_connection_rollback_impl", "line": 2704, "trace_id": "44495bd321e44a85a2486015164c1760", "tenant_id": "", "user_id": "", "request_method": "GET", "request_path": "/api/v1/metrics/summary", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:24:19.596653+00:00", "level": "INFO", "logger": "app.main", "message": "Request end", "module": "main", "function": "audit_logging_middleware", "line": 324, "trace_id": "44495bd321e44a85a2486015164c1760", "tenant_id": "", "user_id": "", "request_method": "GET", "request_path": "/api/v1/metrics/summary", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:24:19.596779+00:00", "level": "INFO", "logger": "uvicorn.access", "message": "::ffff:127.0.0.1:0 - \"GET /api/v1/metrics/summary HTTP/1.1\" 401", "module": "httptools_impl", "function": "send", "line": 466, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:24:27.537142+00:00", "level": "INFO", "logger": "app.main", "message": "Request start", "module": "main", "function": "audit_logging_middleware", "line": 231, "trace_id": "40ea1e80039d43f79bd00676ecac9b3e", "tenant_id": "", "user_id": "", "request_method": "GET", "request_path": "/api/v1/client/metrics/summary", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:24:27.539079+00:00", "level": "INFO", "logger": "app.main", "message": "Request start", "module": "main", "function": "audit_logging_middleware", "line": 231, "trace_id": "7bb552dd07cb45f9a6588528c0794582", "tenant_id": "", "user_id": "", "request_method": "GET", "request_path": "/api/v1/client/metrics/active", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:24:27.545483+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)", "module": "base", "function": "_connection_begin_impl", "line": 2701, "trace_id": "40ea1e80039d43f79bd00676ecac9b3e", "tenant_id": "", "user_id": "", "request_method": "GET", "request_path": "/api/v1/client/metrics/summary", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:24:27.546278+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "INSERT INTO audit_logs (tenant_id, user_id, action, method, path, status_code, timestamp, meta) VALUES (%(tenant_id)s::VARCHAR, %(user_id)s::INTEGER, %(action)s::VARCHAR, %(method)s::VARCHAR, %(path)s::VARCHAR, %(status_code)s::INTEGER, %(timestamp)s::TIMESTAMP WITH TIME ZONE, %(meta)s::JSONB) RETURNING audit_logs.id", "module": "base", "function": "_execute_context", "line": 1846, "trace_id": "40ea1e80039d43f79bd00676ecac9b3e", "tenant_id": "", "user_id": "", "request_method": "GET", "request_path": "/api/v1/client/metrics/summary", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:24:27.546352+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[cached since 204.1s ago] {'tenant_id': None, 'user_id': None, 'action': 'http_request', 'method': 'GET', 'path': '/api/v1/client/metrics/summary', 'status_code': 401, 'timestamp': datetime.datetime(2025, 8, 18, 1, 24, 27, 546203, tzinfo=datetime.timezone.utc), 'meta': Jsonb({'query': {}, 'client_ip': '::ffff: ... (112 chars))}", "module": "base", "function": "_execute_context", "line": 1846, "trace_id": "40ea1e80039d43f79bd00676ecac9b3e", "tenant_id": "", "user_id": "", "request_method": "GET", "request_path": "/api/v1/client/metrics/summary", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:24:27.547586+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "ROLLBACK", "module": "base", "function": "_connection_rollback_impl", "line": 2704, "trace_id": "40ea1e80039d43f79bd00676ecac9b3e", "tenant_id": "", "user_id": "", "request_method": "GET", "request_path": "/api/v1/client/metrics/summary", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:24:27.547890+00:00", "level": "INFO", "logger": "app.main", "message": "Request end", "module": "main", "function": "audit_logging_middleware", "line": 324, "trace_id": "40ea1e80039d43f79bd00676ecac9b3e", "tenant_id": "", "user_id": "", "request_method": "GET", "request_path": "/api/v1/client/metrics/summary", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:24:27.548079+00:00", "level": "INFO", "logger": "uvicorn.access", "message": "::ffff:127.0.0.1:0 - \"GET /api/v1/client/metrics/summary HTTP/1.1\" 401", "module": "httptools_impl", "function": "send", "line": 466, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:24:27.549024+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)", "module": "base", "function": "_connection_begin_impl", "line": 2701, "trace_id": "7bb552dd07cb45f9a6588528c0794582", "tenant_id": "", "user_id": "", "request_method": "GET", "request_path": "/api/v1/client/metrics/active", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:24:27.549163+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "INSERT INTO audit_logs (tenant_id, user_id, action, method, path, status_code, timestamp, meta) VALUES (%(tenant_id)s::VARCHAR, %(user_id)s::INTEGER, %(action)s::VARCHAR, %(method)s::VARCHAR, %(path)s::VARCHAR, %(status_code)s::INTEGER, %(timestamp)s::TIMESTAMP WITH TIME ZONE, %(meta)s::JSONB) RETURNING audit_logs.id", "module": "base", "function": "_execute_context", "line": 1846, "trace_id": "7bb552dd07cb45f9a6588528c0794582", "tenant_id": "", "user_id": "", "request_method": "GET", "request_path": "/api/v1/client/metrics/active", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:24:27.549206+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[cached since 204.2s ago] {'tenant_id': None, 'user_id': None, 'action': 'http_request', 'method': 'GET', 'path': '/api/v1/client/metrics/active', 'status_code': 401, 'timestamp': datetime.datetime(2025, 8, 18, 1, 24, 27, 549138, tzinfo=datetime.timezone.utc), 'meta': Jsonb({'query': {}, 'client_ip': '::ffff: ... (112 chars))}", "module": "base", "function": "_execute_context", "line": 1846, "trace_id": "7bb552dd07cb45f9a6588528c0794582", "tenant_id": "", "user_id": "", "request_method": "GET", "request_path": "/api/v1/client/metrics/active", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:24:27.549845+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "ROLLBACK", "module": "base", "function": "_connection_rollback_impl", "line": 2704, "trace_id": "7bb552dd07cb45f9a6588528c0794582", "tenant_id": "", "user_id": "", "request_method": "GET", "request_path": "/api/v1/client/metrics/active", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:24:27.550068+00:00", "level": "INFO", "logger": "app.main", "message": "Request end", "module": "main", "function": "audit_logging_middleware", "line": 324, "trace_id": "7bb552dd07cb45f9a6588528c0794582", "tenant_id": "", "user_id": "", "request_method": "GET", "request_path": "/api/v1/client/metrics/active", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:24:27.550189+00:00", "level": "INFO", "logger": "uvicorn.access", "message": "::ffff:127.0.0.1:0 - \"GET /api/v1/client/metrics/active HTTP/1.1\" 401", "module": "httptools_impl", "function": "send", "line": 466, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:24:27.553485+00:00", "level": "INFO", "logger": "app.main", "message": "Request start", "module": "main", "function": "audit_logging_middleware", "line": 231, "trace_id": "62b48ed604134aaaa05449aa4d319392", "tenant_id": "", "user_id": "", "request_method": "GET", "request_path": "/api/v1/metrics/summary", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:24:27.554342+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)", "module": "base", "function": "_connection_begin_impl", "line": 2701, "trace_id": "62b48ed604134aaaa05449aa4d319392", "tenant_id": "", "user_id": "", "request_method": "GET", "request_path": "/api/v1/metrics/summary", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:24:27.554457+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "INSERT INTO audit_logs (tenant_id, user_id, action, method, path, status_code, timestamp, meta) VALUES (%(tenant_id)s::VARCHAR, %(user_id)s::INTEGER, %(action)s::VARCHAR, %(method)s::VARCHAR, %(path)s::VARCHAR, %(status_code)s::INTEGER, %(timestamp)s::TIMESTAMP WITH TIME ZONE, %(meta)s::JSONB) RETURNING audit_logs.id", "module": "base", "function": "_execute_context", "line": 1846, "trace_id": "62b48ed604134aaaa05449aa4d319392", "tenant_id": "", "user_id": "", "request_method": "GET", "request_path": "/api/v1/metrics/summary", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:24:27.554487+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[cached since 204.2s ago] {'tenant_id': None, 'user_id': None, 'action': 'http_request', 'method': 'GET', 'path': '/api/v1/metrics/summary', 'status_code': 401, 'timestamp': datetime.datetime(2025, 8, 18, 1, 24, 27, 554437, tzinfo=datetime.timezone.utc), 'meta': Jsonb({'query': {}, 'client_ip': '::ffff: ... (112 chars))}", "module": "base", "function": "_execute_context", "line": 1846, "trace_id": "62b48ed604134aaaa05449aa4d319392", "tenant_id": "", "user_id": "", "request_method": "GET", "request_path": "/api/v1/metrics/summary", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:24:27.554799+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "ROLLBACK", "module": "base", "function": "_connection_rollback_impl", "line": 2704, "trace_id": "62b48ed604134aaaa05449aa4d319392", "tenant_id": "", "user_id": "", "request_method": "GET", "request_path": "/api/v1/metrics/summary", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:24:27.554924+00:00", "level": "INFO", "logger": "app.main", "message": "Request end", "module": "main", "function": "audit_logging_middleware", "line": 324, "trace_id": "62b48ed604134aaaa05449aa4d319392", "tenant_id": "", "user_id": "", "request_method": "GET", "request_path": "/api/v1/metrics/summary", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:24:27.555001+00:00", "level": "INFO", "logger": "uvicorn.access", "message": "::ffff:127.0.0.1:0 - \"GET /api/v1/metrics/summary HTTP/1.1\" 401", "module": "httptools_impl", "function": "send", "line": 466, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:24:30.141075+00:00", "level": "INFO", "logger": "app.main", "message": "Request start", "module": "main", "function": "audit_logging_middleware", "line": 231, "trace_id": "c8952cdd9221465db5bdafa0b754009d", "tenant_id": "", "user_id": "", "request_method": "GET", "request_path": "/api/v1/client/metrics/summary", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:24:30.142738+00:00", "level": "INFO", "logger": "app.main", "message": "Request start", "module": "main", "function": "audit_logging_middleware", "line": 231, "trace_id": "452c4efb1ee5416082453d1c9efc0247", "tenant_id": "", "user_id": "", "request_method": "GET", "request_path": "/api/v1/client/metrics/active", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:24:30.145281+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)", "module": "base", "function": "_connection_begin_impl", "line": 2701, "trace_id": "c8952cdd9221465db5bdafa0b754009d", "tenant_id": "", "user_id": "", "request_method": "GET", "request_path": "/api/v1/client/metrics/summary", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:24:30.145534+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "INSERT INTO audit_logs (tenant_id, user_id, action, method, path, status_code, timestamp, meta) VALUES (%(tenant_id)s::VARCHAR, %(user_id)s::INTEGER, %(action)s::VARCHAR, %(method)s::VARCHAR, %(path)s::VARCHAR, %(status_code)s::INTEGER, %(timestamp)s::TIMESTAMP WITH TIME ZONE, %(meta)s::JSONB) RETURNING audit_logs.id", "module": "base", "function": "_execute_context", "line": 1846, "trace_id": "c8952cdd9221465db5bdafa0b754009d", "tenant_id": "", "user_id": "", "request_method": "GET", "request_path": "/api/v1/client/metrics/summary", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:24:30.145591+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[cached since 206.7s ago] {'tenant_id': None, 'user_id': None, 'action': 'http_request', 'method': 'GET', 'path': '/api/v1/client/metrics/summary', 'status_code': 401, 'timestamp': datetime.datetime(2025, 8, 18, 1, 24, 30, 145494, tzinfo=datetime.timezone.utc), 'meta': Jsonb({'query': {}, 'client_ip': '::ffff: ... (112 chars))}", "module": "base", "function": "_execute_context", "line": 1846, "trace_id": "c8952cdd9221465db5bdafa0b754009d", "tenant_id": "", "user_id": "", "request_method": "GET", "request_path": "/api/v1/client/metrics/summary", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:24:30.147898+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "ROLLBACK", "module": "base", "function": "_connection_rollback_impl", "line": 2704, "trace_id": "c8952cdd9221465db5bdafa0b754009d", "tenant_id": "", "user_id": "", "request_method": "GET", "request_path": "/api/v1/client/metrics/summary", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:24:30.150430+00:00", "level": "INFO", "logger": "app.main", "message": "Request end", "module": "main", "function": "audit_logging_middleware", "line": 324, "trace_id": "c8952cdd9221465db5bdafa0b754009d", "tenant_id": "", "user_id": "", "request_method": "GET", "request_path": "/api/v1/client/metrics/summary", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:24:30.150727+00:00", "level": "INFO", "logger": "uvicorn.access", "message": "::ffff:127.0.0.1:0 - \"GET /api/v1/client/metrics/summary HTTP/1.1\" 401", "module": "httptools_impl", "function": "send", "line": 466, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:24:30.151660+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)", "module": "base", "function": "_connection_begin_impl", "line": 2701, "trace_id": "452c4efb1ee5416082453d1c9efc0247", "tenant_id": "", "user_id": "", "request_method": "GET", "request_path": "/api/v1/client/metrics/active", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:24:30.151854+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "INSERT INTO audit_logs (tenant_id, user_id, action, method, path, status_code, timestamp, meta) VALUES (%(tenant_id)s::VARCHAR, %(user_id)s::INTEGER, %(action)s::VARCHAR, %(method)s::VARCHAR, %(path)s::VARCHAR, %(status_code)s::INTEGER, %(timestamp)s::TIMESTAMP WITH TIME ZONE, %(meta)s::JSONB) RETURNING audit_logs.id", "module": "base", "function": "_execute_context", "line": 1846, "trace_id": "452c4efb1ee5416082453d1c9efc0247", "tenant_id": "", "user_id": "", "request_method": "GET", "request_path": "/api/v1/client/metrics/active", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:24:30.152050+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[cached since 206.8s ago] {'tenant_id': None, 'user_id': None, 'action': 'http_request', 'method': 'GET', 'path': '/api/v1/client/metrics/active', 'status_code': 401, 'timestamp': datetime.datetime(2025, 8, 18, 1, 24, 30, 151822, tzinfo=datetime.timezone.utc), 'meta': Jsonb({'query': {}, 'client_ip': '::ffff: ... (112 chars))}", "module": "base", "function": "_execute_context", "line": 1846, "trace_id": "452c4efb1ee5416082453d1c9efc0247", "tenant_id": "", "user_id": "", "request_method": "GET", "request_path": "/api/v1/client/metrics/active", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:24:30.152690+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "ROLLBACK", "module": "base", "function": "_connection_rollback_impl", "line": 2704, "trace_id": "452c4efb1ee5416082453d1c9efc0247", "tenant_id": "", "user_id": "", "request_method": "GET", "request_path": "/api/v1/client/metrics/active", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:24:30.152875+00:00", "level": "INFO", "logger": "app.main", "message": "Request end", "module": "main", "function": "audit_logging_middleware", "line": 324, "trace_id": "452c4efb1ee5416082453d1c9efc0247", "tenant_id": "", "user_id": "", "request_method": "GET", "request_path": "/api/v1/client/metrics/active", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:24:30.153219+00:00", "level": "INFO", "logger": "uvicorn.access", "message": "::ffff:127.0.0.1:0 - \"GET /api/v1/client/metrics/active HTTP/1.1\" 401", "module": "httptools_impl", "function": "send", "line": 466, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:24:30.160961+00:00", "level": "INFO", "logger": "app.main", "message": "Request start", "module": "main", "function": "audit_logging_middleware", "line": 231, "trace_id": "5c12ae6ae5444d4eb61b65fd718ef32a", "tenant_id": "", "user_id": "", "request_method": "GET", "request_path": "/api/v1/metrics/summary", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:24:30.162556+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)", "module": "base", "function": "_connection_begin_impl", "line": 2701, "trace_id": "5c12ae6ae5444d4eb61b65fd718ef32a", "tenant_id": "", "user_id": "", "request_method": "GET", "request_path": "/api/v1/metrics/summary", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:24:30.162766+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "INSERT INTO audit_logs (tenant_id, user_id, action, method, path, status_code, timestamp, meta) VALUES (%(tenant_id)s::VARCHAR, %(user_id)s::INTEGER, %(action)s::VARCHAR, %(method)s::VARCHAR, %(path)s::VARCHAR, %(status_code)s::INTEGER, %(timestamp)s::TIMESTAMP WITH TIME ZONE, %(meta)s::JSONB) RETURNING audit_logs.id", "module": "base", "function": "_execute_context", "line": 1846, "trace_id": "5c12ae6ae5444d4eb61b65fd718ef32a", "tenant_id": "", "user_id": "", "request_method": "GET", "request_path": "/api/v1/metrics/summary", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:24:30.162815+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[cached since 206.8s ago] {'tenant_id': None, 'user_id': None, 'action': 'http_request', 'method': 'GET', 'path': '/api/v1/metrics/summary', 'status_code': 401, 'timestamp': datetime.datetime(2025, 8, 18, 1, 24, 30, 162735, tzinfo=datetime.timezone.utc), 'meta': Jsonb({'query': {}, 'client_ip': '::ffff: ... (112 chars))}", "module": "base", "function": "_execute_context", "line": 1846, "trace_id": "5c12ae6ae5444d4eb61b65fd718ef32a", "tenant_id": "", "user_id": "", "request_method": "GET", "request_path": "/api/v1/metrics/summary", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:24:30.163325+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "ROLLBACK", "module": "base", "function": "_connection_rollback_impl", "line": 2704, "trace_id": "5c12ae6ae5444d4eb61b65fd718ef32a", "tenant_id": "", "user_id": "", "request_method": "GET", "request_path": "/api/v1/metrics/summary", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:24:30.163659+00:00", "level": "INFO", "logger": "app.main", "message": "Request end", "module": "main", "function": "audit_logging_middleware", "line": 324, "trace_id": "5c12ae6ae5444d4eb61b65fd718ef32a", "tenant_id": "", "user_id": "", "request_method": "GET", "request_path": "/api/v1/metrics/summary", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:24:30.163894+00:00", "level": "INFO", "logger": "uvicorn.access", "message": "::ffff:127.0.0.1:0 - \"GET /api/v1/metrics/summary HTTP/1.1\" 401", "module": "httptools_impl", "function": "send", "line": 466, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:25:14.033727+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)", "module": "base", "function": "_connection_begin_impl", "line": 2701, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:25:14.036626+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT employees.id AS employees_id, employees.tenant_id AS employees_tenant_id, employees.owner_user_id AS employees_owner_user_id, employees.name AS employees_name, employees.config AS employees_config, employees.active_version_id AS employees_active_version_id, employees.created_at AS employees_created_at, employees.updated_at AS employees_updated_at \nFROM employees", "module": "base", "function": "_execute_context", "line": 1846, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:25:14.036931+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[cached since 360.1s ago] {}", "module": "base", "function": "_execute_context", "line": 1846, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
{"timestamp": "2025-08-18T01:25:14.041633+00:00", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "ROLLBACK", "module": "base", "function": "_connection_rollback_impl", "line": 2704, "trace_id": "", "tenant_id": "", "user_id": "", "request_method": "", "request_path": "", "app": "forge1-backend"}
